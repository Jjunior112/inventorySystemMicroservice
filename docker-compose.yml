services:

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    networks:
      - backend
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - backend
  authDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_AUTH}
      ACCEPT_EULA: Y
    container_name: authDb
    ports:
      - "${AUTH_DB_PORT}:1433"
    networks:
      - backend

  authservice:
    build:
      context: .
      dockerfile: Services/authService/Dockerfile
    container_name: authservice
    ports:
      - "${AUTH_SERVICE_PORT}:8080"
    networks:
      - backend
    depends_on:
      - authDb
    restart: unless-stopped

  productsDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_PRODUCT}
      ACCEPT_EULA: Y
    container_name: productsDb
    ports:
      - "${PRODUCT_DB_PORT}:1433"
    networks:
      - backend

  productservice:
    build:
      context: .
      dockerfile: ./Services/productService/Dockerfile
    container_name: productservice
    ports:
      - "${PRODUCT_SERVICE_PORT}:8080"
    networks:
      - backend
    depends_on:
      - productsDb
      - rabbitmq
    restart: unless-stopped

  operationsDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_OPERATIONS}
      ACCEPT_EULA: Y
    container_name: operationsDb
    ports:
      - "${OPERATIONS_DB_PORT}:1433"
    networks:
      - backend

  operationsservice:
    build:
      context: .
      dockerfile: ./Services/operationService/Dockerfile
    container_name: operationsservice
    ports:
      - "${OPERATIONS_SERVICE_PORT}:8080"
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - operationsDb
      - rabbitmq

  stocksDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_STOCK}
      ACCEPT_EULA: Y
    container_name: stocksDb
    ports:
      - "${STOCK_DB_PORT}:1433"
    networks:
      - backend

  stocksservice:
    build:
      context: .
      dockerfile: ./Services/stockService/Dockerfile
    container_name: stocksservice
    ports:
      - "${STOCK_SERVICE_PORT}:8080"
    networks:
      - backend
    depends_on:
      - stocksDb
      - rabbitmq
    restart: unless-stopped

  apigateway:
    build:
      context: .
      dockerfile: ./Gateway/apiGateway/Dockerfile
    container_name: apigateway
    ports:

      - "${API_GATEWAY_PORT}:8080"
    environment:

      - AUTH_AUTHORITY=http://authservice:8080

    depends_on:
      - productservice
      - operationsservice
      - stocksservice
      - authservice

    restart: unless-stopped
    networks:
      - backend
  frontend:
    build:
      context: ./Frontend/inventorySystem
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - backend
    depends_on:
      - apigateway

networks:
  backend:
    driver: bridge
