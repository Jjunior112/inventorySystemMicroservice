version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  userDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_USER}
      ACCEPT_EULA: Y
    ports:
      - "${USER_DB_PORT}:1433"
    networks:
      - backend

  userservice:
    build:
      context: ./userservice
    container_name: userService
    ports:
      - "${USER_SERVICE_PORT}:80"
    networks:
      - backend
    depends_on:
      - userDb
      - rabbitmq

  productDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_PRODUCT}
      ACCEPT_EULA: Y
    ports:
      - "${PRODUCT_DB_PORT}:1433"
    networks:
      - backend

  productservice:
    build:
      context: ./productService
    container_name: productservice
    ports:
      - "${PRODUCT_SERVICE_PORT}:80"
    networks:
      - backend
    depends_on:
      - productDb
      - rabbitmq

  operationsDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_OPERATIONS}
      ACCEPT_EULA: Y
    container_name: operationsDb
    ports:
      - "${OPERATIONS_DB_PORT}:1433"
    networks:
      - backend

  operationsservice:
    build:
      context: ./operationService
    container_name: operationsservice
    ports:
      - "${OPERATIONS_SERVICE_PORT}:80"
    networks:
      - backend
    depends_on:
      - operationsDb
      - rabbitmq

  stockDb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD_STOCK}
      ACCEPT_EULA: Y
    container_name: stockDb
    ports:
      - "${STOCK_DB_PORT}:1433"
    networks:
      - backend

  stockservice:
    build:
      context: ./stockService
    container_name: stockservice
    ports:
      - "${STOCK_SERVICE_PORT}:80"
    networks:
      - backend
    depends_on:
      - stockDb
      - rabbitmq

  apigateway:
    build:
      context: ./apiGateway
    container_name: apigateway
    ports:
      - "9000:80"
    depends_on:
      - userservice
      - productservice
      - operationsservice
      - stockservice
    networks:
      - backend

networks:
  backend:
    driver: bridge
